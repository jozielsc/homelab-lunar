- name: Instalando K3S no MASTER
  vars:
    SERVER_MAIN_IP: '10.10.30.100'
    TOKEN: 'c1ust3rk3s1oc41bui1d3r'
  hosts: SERVER_MAIN
  tasks:
    - name: -> SERVER - Instalando o K3S
      shell: |
        curl -sfL https://get.k3s.io | sh -s - \
        --flannel-backend=none \
        --disable-kube-proxy \
        --disable servicelb \
        --disable-network-policy \
        --disable traefik \
        --cluster-init
      register: k3s_install
      ignore_errors: no 

    - name: Lendo k3s server token
      ansible.builtin.slurp:
        src: /var/lib/rancher/k3s/server/token
      register: k3s_server_token
      ignore_errors: no

    - name: prepare token to servers 
      set_fact: 
        k3s_token: "{{ k3s_server_token['content'] | b64decode | trim }}"
    
    - name: -> SERVER - Acessar o arquivo de configuração do K3S
      shell: cat /etc/rancher/k3s/k3s.yaml
      register: k3s_cfg
      ignore_errors: no 
    
    - name: -> SERVER - Copiar o arquivo de configuração do k3s 
      delegate_to: localhost
      copy:
        content: "{{ k3s_cfg.stdout }}"
        dest: "{{ playbook_dir }}/k3s.cfg.yaml"
      ignore_errors: no

- name: Configurar kubeconfig localmente
  hosts: localhost
  gather_facts: yes
  become: yes
  tasks:
    - name: Criar o diretorio ~/.kube 
      ansible.builtin.file:
        path: "{{ lookup('env', 'HOME') }}/.kube"
        state: directory
        mode: '0755'

    - name: Copiar o arquivo k3s.cfg.yaml para diretorio kube 
      ansible.builtin.copy:
        src: k3s.cfg.yaml 
        dest: "{{ lookup('env', 'HOME') }}/.kube/config"
        remote_src: yes 
        owner: "{{ lookup('env', 'USER')}}"
        group: "{{ lookup('env', 'USER')}}"
        mode: '0644'

- name: NODES - Instalando K3s nos NODES
  hosts: NODES
  vars:
    API_SERVER_IP: '10.10.30.100'
    API_SERVER_PORT: 6443
  tasks:
    - name: -> NODE - INSTALL K3S 
      shell: |
        curl -sfL https://get.k3s.io | sh -s - agent \
        --server https://{{ API_SERVER_IP }}:{{ API_SERVER_PORT }} \
        --token {{ hostvars['k3s1'].k3s_token }}
      register: k3s_install 
      ignore_errors: no
